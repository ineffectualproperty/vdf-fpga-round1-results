#-----------------------------------------------------------
# Vivado v2018.3.op (64-bit)
# SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
# Start of session at: Sat Sep 28 16:30:03 2019
# Process ID: 27983
# Current directory: /home/centos/src/vdf-fpga-metzgen/msu/rtl/vivado_metzgen
# Command line: vivado -source msu.tcl -mode batch
# Log file: /home/centos/src/vdf-fpga-metzgen/msu/rtl/vivado_metzgen/vivado.log
# Journal file: /home/centos/src/vdf-fpga-metzgen/msu/rtl/vivado_metzgen/vivado.jou
#-----------------------------------------------------------
source msu.tcl
# set origin_dir "."
# if { [info exists ::origin_dir_loc] } {
#   set origin_dir $::origin_dir_loc
# }
# set _xil_proj_name_ "msu"
# if { [info exists ::user_project_name] } {
#   set _xil_proj_name_ $::user_project_name
# }
# variable script_file
# set script_file "msu.tcl"
# proc print_help {} {
#   variable script_file
#   puts "\nDescription:"
#   puts "Recreate a Vivado project from this script. The created project will be"
#   puts "functionally equivalent to the original project for which this script was"
#   puts "generated. The script contains commands for creating a project, filesets,"
#   puts "runs, adding/importing sources and setting properties on various objects.\n"
#   puts "Syntax:"
#   puts "$script_file"
#   puts "$script_file -tclargs \[--origin_dir <path>\]"
#   puts "$script_file -tclargs \[--project_name <name>\]"
#   puts "$script_file -tclargs \[--help\]\n"
#   puts "Usage:"
#   puts "Name                   Description"
#   puts "-------------------------------------------------------------------------"
#   puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
#   puts "                       origin_dir path value is \".\", otherwise, the value"
#   puts "                       that was set with the \"-paths_relative_to\" switch"
#   puts "                       when this script was generated.\n"
#   puts "\[--project_name <name>\] Create project with the specified name. Default"
#   puts "                       name is the name of the project from where this"
#   puts "                       script was generated.\n"
#   puts "\[--help\]               Print help information for this script"
#   puts "-------------------------------------------------------------------------\n"
#   exit 0
# }
# if { $::argc > 0 } {
#   for {set i 0} {$i < $::argc} {incr i} {
#     set option [string trim [lindex $::argv $i]]
#     switch -regexp -- $option {
#       "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
#       "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
#       "--help"         { print_help }
#       default {
#         if { [regexp {^-} $option] } {
#           puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
#           return 1
#         }
#       }
#     }
#   }
# }
# set orig_proj_dir "[file normalize "$origin_dir/"]"
# create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcvu9p-fsgd2104-2L-e
# set proj_dir [get_property directory [current_project]]
# set obj [current_project]
# set_property -name "board_part_repo_paths" -value "/home/snpeffer/src/vdf/artya7/vivado-boards-master/new/board_files" -objects $obj
# set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
# set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
# set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
# set_property -name "dsa.board_id" -value "vcu118" -objects $obj
# set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
# set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
# set_property -name "dsa.emu_dir" -value "emu" -objects $obj
# set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
# set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
# set_property -name "dsa.flash_size" -value "1024" -objects $obj
# set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
# set_property -name "dsa.host_interface" -value "pcie" -objects $obj
# set_property -name "dsa.num_compute_units" -value "60" -objects $obj
# set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
# set_property -name "dsa.vendor" -value "xilinx" -objects $obj
# set_property -name "dsa.version" -value "0.0" -objects $obj
# set_property -name "enable_vhdl_2008" -value "1" -objects $obj
# set_property -name "ip_cache_permissions" -value "read write" -objects $obj
# set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
# set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
# set_property -name "part" -value "xcvu9p-fsgd2104-2L-e" -objects $obj
# set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
# set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
# set_property -name "simulator_language" -value "Mixed" -objects $obj
# set_property -name "webtalk.xsim_launch_sim" -value "33" -objects $obj
# if {[string equal [get_filesets -quiet sources_1] ""]} {
#   create_fileset -srcset sources_1
# }
# set obj [get_filesets sources_1]
# set files [list \
#  [file normalize "${origin_dir}/../sdaccel/vdf_control_s_axi.v"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/vdfpackage.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/modular_square_metzgen.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/modular_square_metzgen_iter.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/modular_square_metzgen_post.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/modular_square_metzgen_wrapper.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/vdfpll.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/dcfifo.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/modulolookup.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/modulolut6.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/moduloadd.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/bigadd.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/bigadd3.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/add3.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/sum5to2.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/sum4to1.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/sum13to1.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/sum200to1.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/xilinxdspmuladd.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/xilinxdspadd.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/multisymbolsum200to1.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/multisymbolsquarer.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/square34.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/square42.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/squarer.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/converttomultisymbols.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/convertfrommultisymbols.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/signedcarrycorrection.sv"] \
#  [file normalize "${origin_dir}/../../../modular_square/rtl/unsignedcarrycorrection.sv"] \
#  [file normalize "${origin_dir}/../modular_square_wrapper.sv"] \
#  [file normalize "${origin_dir}/../msu.sv"] \
#  [file normalize "${origin_dir}/../../../primitives/rtl/multiplier.sv"] \
#  [file normalize "${origin_dir}/../../../primitives/rtl/multiply.sv"] \
#  [file normalize "${origin_dir}/../sdaccel/vdf_axi_read_master.sv"] \
#  [file normalize "${origin_dir}/../sdaccel/vdf_axi_write_master.sv"] \
#  [file normalize "${origin_dir}/../sdaccel/vdf_counter.sv"] \
#  [file normalize "${origin_dir}/../sdaccel/vdf_kernel.sv"] \
#  [file normalize "${origin_dir}/../sdaccel/vdf_wrapper.sv"] \
#  [file normalize "${origin_dir}/../sdaccel/vdf.v"] \
# ]
# add_files -norecurse -fileset $obj $files
# set_property SOURCE_SET sources_1 [get_filesets sim_1]
# add_files -fileset sim_1 -norecurse "${origin_dir}/../../../modular_square/rtl/tb/all_tb.sv"
# update_compile_order -fileset sim_1
update_compile_order: Time (s): cpu = 00:00:30 ; elapsed = 00:00:30 . Memory (MB): peak = 1463.688 ; gain = 2.941 ; free physical = 55023 ; free virtual = 78011
# set_property top all_tb [get_filesets sim_1]
# set_property top_lib xil_defaultlib [get_filesets sim_1]
# set files [list \
#  [file normalize "${origin_dir}/msu.srcs/msuconfig.vh" ]\
# ]
# set added_files [add_files -fileset sources_1 $files]
# set file "$origin_dir/../../../modular_square/rtl/modular_square_metzgen.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../modular_square_wrapper.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../msu.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../../../primitives/rtl/multiplier.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../../../primitives/rtl/multiply.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../sdaccel/vdf_axi_read_master.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../sdaccel/vdf_axi_write_master.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../sdaccel/vdf_counter.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../sdaccel/vdf_kernel.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "$origin_dir/../sdaccel/vdf_wrapper.sv"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set file "msu.srcs/msuconfig.vh"
# set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
# set_property -name "file_type" -value "Verilog Header" -objects $file_obj
# set obj [get_filesets sources_1]
# set_property -name "top" -value "vdf" -objects $obj
# set_property -name "top_auto_set" -value "0" -objects $obj
# if {[string equal [get_filesets -quiet constrs_1] ""]} {
#   create_fileset -constrset constrs_1
# }
# set obj [get_filesets constrs_1]
# set file "[file normalize "$origin_dir/msu.srcs/constrs_1/new/user.xdc"]"
# set file_added [add_files -norecurse -fileset $obj [list $file]]
# set file "new/user.xdc"
# set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
# set_property -name "file_type" -value "XDC" -objects $file_obj
# set obj [get_filesets constrs_1]
# set_property -name "target_constrs_file" -value "[get_files *new/user.xdc]" -objects $obj
# set_property -name "target_part" -value "xcvu9p-fsgd2104-2L-e" -objects $obj
# set_property -name "target_ucf" -value "[get_files *new/user.xdc]" -objects $obj
# if {[string equal [get_filesets -quiet sim_1] ""]} {
#   create_fileset -simset sim_1
# }
# set obj [get_filesets sim_1]
# set files [list \
#  [file normalize "${origin_dir}/msu.srcs/tb.sv" ]\
#  [file normalize "${origin_dir}/tb_behav.wcfg" ]\
# ]
# set added_files [add_files -fileset sim_1 $files]
# set file "msu.srcs/tb.sv"
# set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
# set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
# set obj [get_filesets sim_1]
# set_property -name "top" -value "tb" -objects $obj
# set_property -name "top_auto_set" -value "0" -objects $obj
# set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
# set_property -name "verilog_define" -value "FASTSIM=1" -objects $obj
# set_property -name "xsim.simulate.runtime" -value "100000ns" -objects $obj
# set obj [get_filesets utils_1]
# set obj [get_filesets utils_1]
# if {[string equal [get_runs -quiet synth_1] ""]} {
#     create_run -name synth_1 -part xcvu9p-fsgd2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
# } else {
#   set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
#   set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
# }
# set obj [get_runs synth_1]
# set_property set_report_strategy_name 1 $obj
# set_property report_strategy {Vivado Synthesis Default Reports} $obj
# set_property set_report_strategy_name 0 $obj
# if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
#   create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
# }
# set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "synth_1_synth_report_utilization_0" -objects $obj
# 
# }
# set obj [get_runs synth_1]
# set_property -name "part" -value "xcvu9p-fsgd2104-2L-e" -objects $obj
# set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj
# set_property -name "steps.synth_design.args.more options" -value "-mode out_of_context" -objects $obj
# current_run -synthesis [get_runs synth_1]
# if {[string equal [get_runs -quiet impl_1] ""]} {
#     create_run -name impl_1 -part xcvu9p-fsgd2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
# } else {
#   set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
#   set_property flow "Vivado Implementation 2018" [get_runs impl_1]
# }
# set obj [get_runs impl_1]
# set_property set_report_strategy_name 1 $obj
# set_property report_strategy {Vivado Implementation Default Reports} $obj
# set_property set_report_strategy_name 0 $obj
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_init_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_opt_report_drc_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_power_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_place_report_io_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_place_report_utilization_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_place_report_control_sets_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
#   create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_1" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_place_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_post_place_power_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "is_enabled" -value "0" -objects $obj
# set_property -name "display_name" -value "impl_1_phys_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_drc_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_methodology_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_power_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_route_status_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_incremental_reuse_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_clock_utilization_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
#   create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_route_report_bus_skew_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_timing_summary_0" -objects $obj
# 
# }
# if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
#   create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
# }
# set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
# if { $obj != "" } {
# set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_bus_skew_0" -objects $obj
# 
# }
# set obj [get_runs impl_1]
# set_property -name "part" -value "xcvu9p-fsgd2104-2L-e" -objects $obj
# set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
# set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
# set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj
# current_run -implementation [get_runs impl_1]
# puts "INFO: Project created:${_xil_proj_name_}"
INFO: Project created:msu
# set obj [get_dashboards default_dashboard]
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ] ""]} {
# create_dashboard_gadget -name {drc_1} -type drc
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ] ""]} {
# create_dashboard_gadget -name {methodology_1} -type methodology
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ] ""]} {
# create_dashboard_gadget -name {power_1} -type power
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ] ""]} {
# create_dashboard_gadget -name {timing_1} -type timing
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ]
# set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ] ""]} {
# create_dashboard_gadget -name {utilization_1} -type utilization
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ]
# set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
# set_property -name "run.step" -value "synth_design" -objects $obj
# set_property -name "run.type" -value "synthesis" -objects $obj
# if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ] ""]} {
# create_dashboard_gadget -name {utilization_2} -type utilization
# }
# set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ]
# set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj
# move_dashboard_gadget -name {utilization_1} -row 0 -col 0
# move_dashboard_gadget -name {power_1} -row 1 -col 0
# move_dashboard_gadget -name {drc_1} -row 2 -col 0
# move_dashboard_gadget -name {timing_1} -row 0 -col 1
# move_dashboard_gadget -name {utilization_2} -row 1 -col 1
# move_dashboard_gadget -name {methodology_1} -row 2 -col 1
# current_dashboard default_dashboard 
INFO: [Common 17-206] Exiting Vivado at Sat Sep 28 16:30:39 2019...
